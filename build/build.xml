<?xml version="1.0" encoding="UTF-8"?>

<project name="fez" default="build">
 <property name="srcdir" value="${basedir}/../public/" />
 <property name="phpextensions" value="php" />

 <target name="build"
   depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdoc,phpunit,phpcb" />
 
 <target name="jenkins"
   depends="prepare,lint,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpcb" />

 <target name="build-parallel"
   depends="prepare,lint,tools-parallel,phpunit,phpcb"/>

 <target name="tools-parallel"
         description="Run tools in parallel">
  <parallel threadCount="2">
   <sequential>
    <antcall target="pdepend"/>
    <antcall target="phpmd-ci"/>
   </sequential>
   <antcall target="phpcpd"/>
   <antcall target="phpcs-ci"/>
   <antcall target="phploc"/>
   <antcall target="phpdoc"/>
  </parallel>
 </target>

 <target name="clean" description="Cleanup build artifacts">
  <delete dir="${basedir}/api"/>
  <delete dir="${basedir}/code-browser"/>
  <delete dir="${basedir}/coverage"/>
  <delete dir="${basedir}/logs"/>
  <delete dir="${basedir}/pdepend"/>
  <delete dir="${basedir}/../generatedJUnitFiles"/>
 </target>

 <target name="prepare" depends="clean"
         description="Prepare for build">
  <mkdir dir="${basedir}/api"/>
  <mkdir dir="${basedir}/code-browser"/>
  <mkdir dir="${basedir}/coverage"/>
  <mkdir dir="${basedir}/logs"/>
  <mkdir dir="${basedir}/pdepend"/>
  <mkdir dir="${basedir}/../generatedJUnitFiles"/>
 </target>

 <target name="lint">
  <apply executable="php" failonerror="true">
   <arg value="-l" />
   
   <!-- let me know if you find a less copy and paste
        way of doing the below -->
   <fileset dir="${srcdir}">
    <include name="**/*.php" />
    <modified />
   </fileset>

  </apply>
 </target>

 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="phploc">
   <arg value="--log-csv" />
   <arg value="${basedir}/logs/phploc.csv" />
   <arg value="--suffixes" />
   <arg value="${phpextensions}" />
   <arg path="${srcdir}" />
  </exec>
 </target>

 <target name="pdepend"
         description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend">
   <arg value="--jdepend-xml=${basedir}/logs/jdepend.xml" />
   <arg value="--jdepend-chart=${basedir}/pdepend/dependencies.svg" />
   <arg value="--overview-pyramid=${basedir}/pdepend/overview-pyramid.svg" />
   <arg value="--suffix=${phpextensions}" />
   <arg path="${srcdir}" />
  </exec>
 </target>

 <target name="phpmd"
         description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpmd">
   <arg value="--suffixes" />
   <arg value="${phpextensions}" />
   <arg path="${srcdir}" />
   <arg value="text" />
   <arg value="${basedir}/phpmd.xml" />
  </exec>
 </target>

 <target name="phpmd-ci"
         description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
  <exec executable="phpmd">
   <arg value="--suffixes" />
   <arg value="${phpextensions}" />
   <arg path="${srcdir}" />
   <arg value="xml" />
   <arg value="${basedir}/phpmd.xml" />
   <arg value="--reportfile" />
   <arg value="${basedir}/logs/pmd.xml" />
  </exec>
 </target>

 <target name="phpcs"
         description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpcs">
   <arg value="--extensions=${phpextensions}" />
   <arg value="--standard=Zend" />
   <arg path="${srcdir}" />
  </exec>
 </target>

 <target name="phpcs-ci"
         description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
  <exec executable="phpcs" output="/dev/null">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/logs/checkstyle.xml" />
   <arg value="--standard=Zend" />
   <arg value="--extensions=${phpextensions}" />
   <arg path="${srcdir}" />
  </exec>
 </target>

 <target name="phpcpd" description="Find duplicate code using PHPCPD">
  <exec executable="phpcpd">
   <arg value="--suffixes" />
   <arg value="${phpextensions}" />
   <arg value="--log-pmd" />
   <arg value="${basedir}/logs/pmd-cpd.xml" />
   <arg path="${srcdir}" />
  </exec>
 </target>

 <target name="phpdoc"
         description="Generate API documentation using PHPDocumentor">
  <exec executable="phpdoc">
   <!--arg value="- -quiet" /-->
   <arg value="--directory" />
   <arg path="${srcdir}" />
   <arg value="--target" />
   <arg path="${basedir}/api" />
  </exec>
 </target>

 <target name="phpunit-coverage" description="Run code coverage with PHPUnit">
    <exec executable="phpunit" failonerror="false">
        <arg line="--coverage-html ${basedir}/coverage ${basedir}/../tests/application" />
    </exec>
 </target>

 <target name="selenium" description="Run selenium tests with PHPUnit">
  <exec executable="phpunit" failonerror="false">
   <arg line="--log-junit ${basedir}/logs/selenium.xml --bootstrap=${basedir}/../tests/application/bootstrap.php --verbose ${basedir}/../tests/application/AllTests.php" />
   <arg path="${srcdir}" />
  </exec>
 </target>

 <target name="phpunit" description="Run unit tests with PHPUnit">
  <exec executable="phpunit" failonerror="false">
   <arg line="--verbose ${basedir}/../tests/application" />
   <arg path="${srcdir}" />
  </exec>
 </target>

 <target name="phpcb"
         description="Aggregate tool output with PHP_CodeBrowser">
  <exec executable="phpcb">
   <arg value="--log" />
   <arg path="${basedir}/logs" />
   <arg value="--extensions" />
   <arg value="${phpextensions}" />
   <arg value="--source" />
   <arg path="${srcdir}" />
   <arg value="--output" />
   <arg path="${basedir}/code-browser" />
  </exec>
 </target>
</project>


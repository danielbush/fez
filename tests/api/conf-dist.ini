; php ini

[general]

; Configure this to point to your fez installation.
; It should probably be HTTPS (since the api is using basic auth).
;
; DO NOT SET IT TO PRODUCTION!
base_uri = https://cdu.danb

; Turns up the logging and warnings and notices when you run tests/api/bin/run.sh ...
;
; Useful if you are debugging xml output.
; Turn it off you want to run the tests and just see what's failed
; without too much details.

VERBOSE = 1

; Should not exist in fez.  Large number should suffice.
nonexistent-collection = cdu:9999999
nonexistent-community = cdu:9999999
nonexistent-record = cdu:9999999


[credentials]

; DO NOT SET THIS UP:
nonexistent_username = nonexistent
nonexistent_password = randompassword

; Set up the following accounts in fez:

; Super admins can do anything.
; Includes: changing doctypes and config settings.
superadmin_username = catadmin
superadmin_password = "admin"

; Admins can add/remove people from groups and other user management
; operations.
admin_username = admin
admin_password = admin

; A fez user that belongs to NO groups.
nogroups_username = test_nogroups
nogroups_password = admin

; Role-based user accounts.

; NOTE
; The format is eg:
;   viewer_group => {role}_{type}
; where:
; {role} = lowercase version of existing fez role
; So viewer => Viewer
;    lister => Lister
;    ...

viewer_group = test_viewer ; viewer_username should belong to
viewer_username = test_viewer
viewer_password = admin

lister_group = test_lister ; viewer_username should belong to
lister_username = test_lister
lister_password = admin

editor_group = test_editor ; editor_username should belong to
editor_username = test_editor
editor_password = admin

creator_group = test_creator ; viewer_username should belong to
creator_username = test_creator
creator_password = admin

approver_group = test_approver ; approver_username should belong to
approver_username = test_approver
approver_password = admin

[public_community]

; This identifies a community
; It is assumed that the community, collecion, and record
; belong to eachother.
;community = cdu:30222
;collection = cdu:30242
;record = cdu:6522  ; this is a thesis, which is a little awkward

; journal / herdc
community = cdu:30221
collection = cdu:38515
record = cdu:38432

; Should point to a record that has not been published.
unpublished_record = cdu:39056

; The collection in this group must allow records of the following xdis_id to be created:
xdis_id = 179

; This create workflow name is for xdis_id 179
create_record_action_name = "Create Journal Article"

; A collection with > 50 records.
; Pagination tests will look for second page of 25 records.
large_collection = cdu:38515

[restricted_community]

; INSTRUCTIONS:
;
; Records in this set should inherit or set security that requires
; a FEZ GROUP for authentication.
;
; For the collection(s) in this group, edit security with the following:
; - Viewer / Fez Group   = viewer_group
; - Editor / Fez Group   = editor_group
; - Approver / Fez Group = approver_group
;
; DO NOT TICK 'Restrict to Fez Authenticated Users?' for any of these.
; (if you do, any successful authentication will be authorized)
;
; Records should then be set to inherit their settings.

;community = cdu:60
;collection = cdu:9501
;record = cdu:8681

community = cdu:39081
collection = cdu:39082
record = cdu:39083
record_with_multiple_collections = cdu:8681

; The collection in this group must allow records of the following xdis_id to be created:
xdis_id = 179


[edit_security]
record = cdu:6522

[doc-with-cont-vocab]
record = cdu:6522

; CDU specific
[laal]
community = cdu:29712
collection = cdu:29713
record = cdu:30780
xdis_id = 360

[thesis]
community = cdu:30222
collection = cdu:30242
xdis_id = 187

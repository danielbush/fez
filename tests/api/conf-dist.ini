; php ini

[general]

; Configure this to point to your fez installation.
; It should probably be HTTPS (since the api is using basic auth).

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; DO NOT SET IT TO PRODUCTION!
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
base_uri = https://fez.local

; Turns up the logging and warnings and notices when you run tests/api/bin/run.sh ...
;
; Useful if you are debugging xml response output.
; Turn it off you want to run the tests and just see what's failed
; without too much details.

VERBOSE = 0

; Should not exist in fez.  Large number should suffice.

nonexistent-collection = cdu:9999999
nonexistent-community = cdu:9999999
nonexistent-record = cdu:9999999


[credentials]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Create the users and groups below by running:
;;   php bin/setup-users.php
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; DO NOT SET THIS UP:
nonexistent_username = nonexistent
nonexistent_password = randompassword

; Set up the following accounts in fez:

; Super admins can do anything.
; Includes: changing doctypes and config settings.
superadmin_username = catadmin
superadmin_password = "admin"

; Admins can add/remove people from groups and other user management
; operations.
admin_username = admin
admin_password = admin

; A fez user that belongs to NO groups.
nogroups_username = test_nogroups
nogroups_password = admin

; Role-based user accounts.

; NOTE
; The format is eg:
;   viewer_group => {role}_{type}
; where:
; {role} = lowercase version of existing fez role
; So viewer => Viewer
;    lister => Lister
;    ...

viewer_group = test_viewer ; viewer_username should belong to
viewer_username = test_viewer
viewer_password = admin

lister_group = test_lister ; viewer_username should belong to
lister_username = test_lister
lister_password = admin

editor_group = test_editor ; editor_username should belong to
editor_username = test_editor
editor_password = admin

creator_group = test_creator ; viewer_username should belong to
creator_username = test_creator
creator_password = admin

approver_group = test_approver ; approver_username should belong to
approver_username = test_approver
approver_password = admin

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; You need to set up the following up MANUALLY.
;
; We recommend you CREATE new test communities, collections and
; records rather than use existing data.  A large community or
; collection will take a long time to auth index which will
; compromise setup / before feature hooks.

; TODO: it would be nice to automate this.

; This is an example link for creating a new community using
; xdis_id = 11 is the display for Fedora Community Display
; xdis_id = 9  is the display for Fedora Collection Display
; Check your fez_xsd_display to verify this.
;
; For a new community:
; http://fez.local/workflow/new.php?pid=-1&xdis_id=11
; 
; Don't forget to specify that this community can contain collection displays
; when creating the community.
; Repeat for restricted community.
; Record the pids you created in your conf.ini (a copy of this).
;
; Once you've created the community you should be able to add collections
; to it using the dropdown from community page.


[public_community]

; Create a test community (do NOT use an existing one on your test server especially if
; it is large as auth indexing will take a long time)...
; This community should be viewable and listable by anyone.
community = cdu:42427
; Create a collection that belongs to this community.
collection = cdu:42428
; The collection in this group must allow records of the following xdis_id to be created:
xdis_id = 179
; This create workflow name is for xdis_id 179
create_record_action_name = "Create Journal Article"

; Create a record  that belongs to this collection.
record = cdu:42429
; Should point to a record that has not been published.
; Create a record in the above collection and submit for approval.
unpublished_record = cdu:42430
; Create a record in this collection that has one attachment - eg a pdf, image file or text file
; It will be tested for indirectly in @col-viewer-download-attachment .
record_with_attachment = cdu:42445
; A collection with > 50 records.
;
; For this case, it may be easier to just pick an existing collection on your test server.
; Pagination tests will look for second page of 25 records.
large_collection = cdu:38515

[restricted_community]

; INSTRUCTIONS:
;
; Records in this set should inherit or set security that requires
; a FEZ GROUP for authentication.
;
; For the collection(s) in this group, edit security with the following:
; - Viewer / Fez Group   = viewer_group
; - Editor / Fez Group   = editor_group
; - Approver / Fez Group = approver_group
;
; DO NOT TICK 'Restrict to Fez Authenticated Users?' for any of these.
; (if you do, any successful authentication will be authorized)
;
; Records should then be set to inherit their settings.

community = cdu:42439
collection = cdu:42440
; The collection in this group must allow records of the following xdis_id to be created:
xdis_id = 179

record = cdu:42441

; For this, create the record and add it to both public and restricted
; collections we've created above.
record_with_multiple_collections = cdu:42442


[edit_security]
record = cdu:6522

[doc-with-cont-vocab]
record = cdu:6522

; CDU specific
[laal]
community = cdu:29712
collection = cdu:29713
record = cdu:30780
xdis_id = 360

[thesis]
community = cdu:30222
collection = cdu:30242
xdis_id = 187
